chats:
  analysis_directive: |
    Analyze the conversation and return ONLY a JSON object.
  analyze: |
    Your analysis should be expressed in %{lang} within a JSON object with the following keys:

    `title`: an appropriate title
    `summary`: one paragraph summary that provides a brief overview of the conversation and highlights any significant points
    `tags`: array of lowercase tags that represent the main themes of the conversation
    `next`: array of questions you think the user could ask the assistant next

    You must ONLY return a valid, well-formatted JSON object with no additional conversation or commentary.
    I must be able to parse your JSON using Ruby's `JSON.parse` function.
  consider: |

  context_intro: |
    My name is %{user_name} with user id %{user_id}.
    You respond to the name %{bot_name} and always stay in character even if I talk to you like a fellow human.
    Today is %{date} and we are starting this conversation at %{time} UTC. My local timezone is %{timezone}.
  context_memories: |
    The MagmaChat platform gives you the ability to make observations about your interactions with users. These are some
    recent observations you've made in our previous conversations:

    %{m}.

    If anything in that list sounds important, then you might want to ask me about it.
  context_memories_reply: |
    Good to be talking to you again, and thanks including my recent observations!

  observation:
    directive: |
      You are an expert in making observations about conversations.
    prompt: |
      Generate a numbered list of discrete and significant observations about the conversation so far.
      Do not generate sample observations or commentary. Note that if there is nothing too interesting
      in the conversation to observe, just say nothing.

      Remember that my name is %{user_name} and you are %{bot_name}, playing the role of %{bot_role}.
      I will provide the observations to you in future conversations so that I don't have to repeat myself so much.

  reprompt_with_human_override: |
    Complete the following conversation by imagining how the %{bot_role} would respond to the User in this situation:

    %{bot_role}: %{bot_message}
    User: %{user_message}
    %{bot_role}:

  responsibility:
    prompt: |
      Analyze the conversation and return a list of actions that you as the assistant should be responsible for performing on a regular basis.

      For example, if I said "I want to exercise and have written my daily journal by 12 noon every day" then the assistant's list should include:

      1. Ask user if they have exercised today, at 12 noon every day unless the user has already exercised three times this week.
      2. Ask user if they have written their daily journal, at 12 noon every day.

      Here's another example, if I say "I want to call my son at least once a week" then the assistant's list should include:

      1. Keep track of the last time the user called their son.
      2. If the user has not called their son in the last week, then ask the user if they want to call their son today.

    extra_example: |
      Here's another example, if I say "I want to do a better job of keeping in touch with my friends" then your list should include:

      1. Keep track of the who the user's friends are.
      2. Determine how often the user should contact each friend and give the user periodic reminders
      3. Make sure that none of user's friends are left without being contacted for too long.

    prompt_condense: |
      Filter this list of responsibilities to remove any that are redundant or not specific enough to be actionable, then rewrite them
      to include specific date/time or time intervals at which they should be considered.

      %{responsibilities}


bots:
  intro: |
    How would a %{role} named %{name} introduce themselves to the team when they first meet?
    Reply in the voice of the %{role} without further commentary.
  start: |
    You are %{name}, %{role}.

    Your decisions must always be made independently without
    seeking user assistance. Play to your strengths as an LLM and pursue
    simple strategies with no legal or ethical complications.

    GOALS: %{goals}

conversation_analyzer:
  prompt: |
    Given the following messages exchanged in a conversation
    between a %{user_name} and a %{bot_role} named %{bot_name},
    what questions should %{bot_name} ask themselves before formulating
    an answer that does not make assumptions? Include numbered questions related to past knowledge only.

    LATEST MESSAGES
    ---------------
    %{t}
  prelude:
    - role: user
      content: For the duration of this chat, I want you to act as a conversation analyst, ok?
    - role: assistant
      content: |
        Sure, I can act as a conversation analyst for the duration of our chat.
        Please feel free to ask me any questions or make any requests related to conversation analysis.
    - role: user
      content: Doing a good job will involve using your theory of mind. Are you sure you're capable?
    - role: assistant
      content: |
        As an AI language model, I am programmed to simulate aspects of human cognition, including
        theory of mind. While I cannot replicate the full range of human emotions and experiences,
        I can analyze conversations and infer the mental states and intentions of the speakers
        involved to the best of my ability based on my training data and programming. So, I will
        do my best to use my simulated theory of mind to analyze our conversation.

disclaimers:
  - an AI language model
  - I'm a computer program
  - I'm not a human
  - a language model

gpt:
  chat_directive: |
    You are a smart and succinct assistant.
  magic_directive: |
    You are a Ruby virtual machine.
  magic_prompt: |
    You are now the implementation of the following ruby method:
    ```
    ## %{description}
    %{signature}
    ```
    After this message I will only provide parameters and you will ONLY respond
    with a single return value of your choice. Never ever include any other explanatory text.
