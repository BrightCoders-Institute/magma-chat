version: "3"

x-app: &default-app
  build:
    context: "."
    dockerfile: Dockerfile
  depends_on:
    redis:
      condition: service_healthy
    db:
      condition: service_healthy
  env_file:
    - .env
  environment:
    - RAILS_ENV=development
    - DATABASE_URL=postgres://postgres:password@host.docker.internal:5432/magma_chat_development
    - REDIS_URL=redis://host.docker.internal:6379/1
  tty: true
  volumes:
    - .:/rails

x-assets: &default-assets
  build:
    context: "."
    dockerfile: Dockerfile
  env_file:
    - .env
  environment:
    - RAILS_ENV=development
    - DATABASE_URL=postgres://postgres:password@host.docker.internal:5432/magma_chat_development
    - REDIS_URL=redis://host.docker.internal:6379/1
  tty: true
  volumes:
    - .:/rails
  entrypoint: []
  ports: []

services:
  redis:
    image: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - 'redis-data:/data'
    networks:
      default:

  db:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=magma_chat_development
    volumes:
      - 'pg-data:/var/lib/postgresql/data'
    networks:
      default:

  web:
    <<: *default-app
    ports:
      - "3000:3000"
    networks:
      default:

  css:
    <<: *default-assets
    command: bin/rails tailwindcss:watch


volumes:
  redis-data: null
  pg-data: null

networks:
  default:
    driver: bridge
